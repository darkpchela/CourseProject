@model ProfileItemsVM
<div class="d-flex flex-row flex-wrap align-items-baseline justify-content-center">
    @if (Model.AllowEdit)
    {
        <div class="square-25 m-1">
            <div class="w-100 h-100 d-flex flex-row justify-content-center ">
                <a asp-action="CreateItem" asp-controller="Store" class="btn w-50 h-50 align-self-center">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16"
                         fill="currentColor" class="h-100 w-100" viewBox="0 0 16 16">
                        <path fill-rule="evenodd"
                              d="M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                        <path fill-rule="evenodd"
                              d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                    </svg>
                </a>
            </div>
        </div>
    }
    @for (int i = 0; i < Model.Items.Count; i++)
    {
        <div class="m-1 square-25 text-center">
            <div class="p-2">
                <a asp-action="Item" asp-controller="Store" asp-route-id="@Model.Items[i].Id" class="btn p-0 btn-outline-info"
                   data-placement="bottom" data-toggle="tooltip" data-html="true" title="tooltip">
                    <img class="img-fluid img-thumbnail"
                         src="@Model.Items[i].ImageUrl"
                         alt="picture">
                </a>
            </div>
            <div>
                <h5>@Model.Items[i].Name</h5>
            </div>
            @if (Model.AllowEdit)
            {
                await Html.RenderPartialAsync("Profile/_EditTools", new EditToolsVM
                {
                    ItemId = Model.Items[i].Id,
                    Type = ItemTypes.Item
                });
            }
        </div>
    }
</div>