@model CreateCollectionVM
@inject IThemesCrudService themesService
@inject IFieldTypesCrudService fieldTypesService
@inject IResourceCrudService resourcesService

<div class="d-flex justify-content-center mt-2">
    <div class="d-flex flex-column align-items-stretch w-75 mt-2" style="max-width: 768px;">
        <h3 class="text-center">
            New Collection
        </h3>
        <div class="align-self-center border-custom rounded p-1">
            <div id="dropzone" class="dropzone d-flex p-0 justify-content-center square-25">
            </div>
        </div>
        <form asp-action="CreateCollection" asp-controller="Store" method="post" class="d-flex flex-column align-items-center mt-2">
            <input asp-for="Name" type="text" class="form-control w-75 text-center"
                   placeholder="Collection name">
            @Html.DropDownListFor(m => m.ThemeId, new SelectList(await themesService.GetAllAsync(), "Id", "Name"), "Select theme", new { @class = "mt-2 form-control w-75 text-center" })
            <div class="text-center mt-3 w-75">
                <h6 class="text-muted">Description(Markdown)</h6>
                <textarea asp-for="Description" class="form-control form-control w-100 text-center"
                          placeholder="Collection description"
                          style="min-height: 20vh;"></textarea>
            </div>
            <div class="text-center mt-3 w-75">
                <h6 class="text-muted">Optional fields</h6>
                <div id='fields' name="Fields"
                     class="d-flex flex-column justify-content-center border-custom p-2">
                    <div class="w-100">
                        <a id="btnAddField" href="#" class="btn p-0">
                            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                                 class="tiny-icon" viewBox="0 0 16 16">
                                <path fill-rule="evenodd"
                                      d="M14 1H2a1 1 0 0 0-1 1v12a1 1 0 0 0 1 1h12a1 1 0 0 0 1-1V2a1 1 0 0 0-1-1zM2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2H2z" />
                                <path fill-rule="evenodd"
                                      d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z" />
                            </svg>
                        </a>
                    </div>
                </div>
                <div class="w-100 d-flex flex-row justify-content-between mt-2">
                    <a asp-action="Profile" asp-controller="Store" class="btn p-0">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                             class="bigger-icon" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                        </svg>
                    </a>
                    <div asp-validation-summary="All" class="text-danger font-weight-bold">
                    </div>
                    <button type="submit" class="btn p-0">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                             class="bigger-icon" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                        </svg>
                    </button>
                </div>
            </div>
            <input type="hidden" asp-for="@Model.ResourceId" />
            <input type="hidden" asp-for="@Model.OwnerId" value="@Model.OwnerId" />
        </form>
    </div>
</div>

<div id="tpl" class="d-none">
    @{await Html.RenderPartialAsync("_DropzoneTemplate"); }
</div>

<div class="d-none">
    <div id="fieldProto" name='field' data-id="0" class="d-flex flex-row flex-nowrap align-items-center mt-1">
        <input id="name" name="name" type="text" class="form-control flex-grow-1 mr-1 " placeholder="Field name" />
        @Html.DropDownList("type", new SelectList(await fieldTypesService.GetAllAsync(), "Id", "Type"), "Select field type", new { @class = "form-control" })
        <a name='btnDeleteField' href="" class="d-block btn p-0">
            <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor" class="tiny-icon" viewBox="0 0 16 16">
                <path fill-rule="evenodd"
                      d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
            </svg>
        </a>
    </div>
</div>

@section Scripts{
    <script src="~/lib/dropzone-5.7.0/dist/dropzone.js"></script>
    <script>
        Dropzone.autoDiscover = false;
        $('#dropzone').dropzone({
            addRemoveLinks: true,
            maxFiles: 1,
            maxFileSeize: 20,
            method: 'post',
            url: '/Store/UploadImage',
            previewTemplate: $('#tpl').html(),
            success: (file, response) => {
                console.log(response);
                if (response.succeed === true) {
                    $('#dropzone img').attr('src', response.url);
                    $('#ResourceId').val(response.id);
                }
                else {
                    console.log(response.error);
                }
            },
            removedfile: () => {
                $.post('/Store/AbortUpload');
                $('#dropzone .dz-preview').remove();
            }
        });
    </script>
    <script>

        let fieldsCount = 0;
        const fieldProtoElem = $('#fieldProto');
        const fieldsElem = $('#fields');
        const getNewField = () => {
            let field = fieldProtoElem.clone().removeAttr('id');
            field.attr('data-id', fieldsCount);
            field.children('#name').attr('name', `Fields[${fieldsCount}].Name`).removeAttr('id');
            field.children('#type').attr('name', `Fields[${fieldsCount}].TypeId`).removeAttr('id');
            field.children('[name=btnDeleteField]').click(e => {
                e.preventDefault();
                $(e.target).parents('[name="field"]').remove();
                fieldsCount--;
            });
            fieldsCount++;
            return field;
        };

        $('#btnAddField').click(e => {
            e.preventDefault();
            let field = getNewField();
            $("#fields #btnAddField").before(field);
        });

        $('select').focus(e => {
            $(e.target).children('[value=""]').remove();
        });
    </script>
}