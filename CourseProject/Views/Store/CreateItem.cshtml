@model CreateItemVM
@inject ICollectionsCrudService collectionsService

<div class="d-flex justify-content-center mt-2">
    <div class="d-flex flex-column align-items-stretch w-75 mt-2" style="max-width: 768px;">
        <h3 class="text-center">
            New Item
        </h3>
        <div class="align-self-center border-custom p-1">
            <div id="dropzone" class="dropzone square-25">
            </div>
        </div>
        <form class="mt-2">
            <div class="d-flex flex-column align-items-center">
                <input type="text" class="form-control w-75 text-center" asp-for="@Model.Name" placeholder="Item name">
                @Html.DropDownListFor(m => m.CollectionId, new SelectList(await collectionsService.GetAllAsync(), "Id", "Name"), "Select collection", new { @class = "mt-2 form-control w-75 text-center" })
                <div class="text-center mt-3 w-75">
                    <h6 class="text-muted">Description(Markdown)</h6>
                    <textarea class="form-control form-control w-100 text-center" placeholder="Item description" asp-for="Description" style="min-height: 20vh;"></textarea>
                </div>
                <div class="text-center w-75 mt-3">
                    <h6 class="text-muted">Optional fields</h6>
                    <div id="fields">
                    </div>
                </div>
                <div class="text-center w-75 mt-2">
                    <input asp-for="Tags" type="text" class="form-control text-center" placeholder="tags">
                </div>
                <div class="w-75 d-flex flex-row  justify-content-between mt-2">
                    <a asp-action="Profile" asp-controller="Store" class="btn p-0">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                             class="medium-icon" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                        </svg>
                    </a>
                    <button type="submit" asp-action="CreateItem" asp-controller="Store" class="btn p-0">
                        <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                             class="medium-icon" viewBox="0 0 16 16">
                            <path fill-rule="evenodd"
                                  d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                        </svg>
                    </button>
                </div>
            </div>
        </form>
    </div>
</div>

<div id="fieldProto">
    <div class="border-custom rounded ">
        <div class="d-flex flex-row flex-nowrap justify-content-between p-1">
            <label name="fieldName" class="d-inline-block text-center p-1 w-50">FieldName</label>
            <input name="fieldInput" class="d-inline-block text-center form-control" style="width: 70%;">
        </div>
    </div>
</div>

@section Scripts{
    <link rel="stylesheet" href="~/lib/dropzone-5.7.0/dist/dropzone.css" />
    <script src="~/lib/dropzone-5.7.0/dist/dropzone.js"></script>
    <script>
        Dropzone.autoDiscover = false;
        $('#dropzone').dropzone({
            addRemoveLinks: true,
            maxFiles: 1,
            maxFileSeize: 20,
            method: 'post',
            url: '/Store/UploadImage',
            success: (file, response) => {
                console.log(response);
                if (response.succeed === true) {
                    $('#dropzone .dz-image img').attr('src', response.uri);
                }
                else {
                    console.log(response.error);
                }
            }
        });

        let fieldsCount = 0;
        const fieldProtoElem = $('#fieldProto');
        const fieldsElem = $('#fields');
        const getNewField = () => {
            let field = fieldProtoElem.clone().removeAttr('id');
            field.attr('data-id', fieldsCount);
            field.children('[name="fieldName"]').attr('name', `Fields[${fieldsCount}].Name`);
            field.children('[name="fieldInput"]').attr('name', `Fields[${fieldsCount}].Value`);
            fieldsCount++;
            return field;
        };

        $('select').change(e => {
            $(e.target).children('[value=""]').remove();
            e.preventDefault();
            console.log($(e.target).val());
            $.post("/Store/GetCollectionFields",
                { id : $(e.target).val() },
                data => {
                    console.log(data)
                }
            );
        });
    </script>
}