@model CreateItemVM
@inject IUserCrudService userService
@inject ISessionHelper sessionHelper

<div class="d-flex justify-content-center mt-2">
    <div class="d-flex flex-column align-items-stretch w-75 mt-2" style="max-width: 768px;">
        <h3 class="text-center">
            New Item
        </h3>

        <div class="align-self-center p-1">
            <div name="imgContainer" style="display: none;">
                <div class="square-25 d-flex justify-content-center align-items-center">
                    <a id="changeImage" href="" class="btn p-0">
                        <img class="img-fluid img-thumbnail" src="@Model.ImageUrl" />
                    </a>
                </div>
            </div>
            <div id="dzContainer">
                <div id="dropzone" class="dropzone d-flex p-0 justify-content-center square-25">
                </div>
            </div>
        </div>

        <form asp-action="CreateItem" asp-controller="Profile" method="post" class="d-flex flex-column align-items-center mt-2">
            <input type="text" class="form-control w-75 text-center" asp-for="@Model.Name" placeholder="Item name">

            @{
                int userId = User.IsInRole("admin") ? sessionHelper.GetRemeberedUserId() : sessionHelper.GetCurrentUserId();
                var user = await userService.GetAsync(userId);
                if (user != null)
                {
                    @Html.DropDownListFor(m => m.CollectionId, new SelectList(user.Collections, "Id", "Name"), "Select collection", new { @class = "mt-2 form-control w-75 text-center" });
                }
            }

            <div class="text-center mt-3 w-75">
                <h6 class="text-muted">Description(Markdown)</h6>
                <textarea class="form-control form-control w-100 text-center" placeholder="Item description" asp-for="Description" style="min-height: 20vh;"></textarea>
            </div>

            <div class="text-center w-75 mt-3">
                <h6 class="text-muted">Optional fields</h6>
                <div id="fields">
                </div>
            </div>

            <div class="text-center w-75 mt-2">
                <input asp-for="TagsJson" type="text" class="form-control" placeholder="tags">
            </div>

            <div class="w-75 d-flex flex-row justify-content-between mt-2">
                <a asp-action="Info" asp-controller="Profile" asp-route-id="@Model.OwnerId" class="btn p-0">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                         class="bigger-icon" viewBox="0 0 16 16">
                        <path fill-rule="evenodd"
                              d="M4.646 4.646a.5.5 0 0 1 .708 0L8 7.293l2.646-2.647a.5.5 0 0 1 .708.708L8.707 8l2.647 2.646a.5.5 0 0 1-.708.708L8 8.707l-2.646 2.647a.5.5 0 0 1-.708-.708L7.293 8 4.646 5.354a.5.5 0 0 1 0-.708z" />
                    </svg>
                </a>
                <button type="submit" class="btn p-0">
                    <svg xmlns="http://www.w3.org/2000/svg" fill="currentColor"
                         class="bigger-icon" viewBox="0 0 16 16">
                        <path fill-rule="evenodd"
                              d="M13.854 3.646a.5.5 0 0 1 0 .708l-7 7a.5.5 0 0 1-.708 0l-3.5-3.5a.5.5 0 1 1 .708-.708L6.5 10.293l6.646-6.647a.5.5 0 0 1 .708 0z" />
                    </svg>
                </button>
            </div>

            <div asp-validation-summary="All" class="text-danger font-weight-bold">
            </div>
            <input type="hidden" asp-for="@Model.ResourceId" value="@Model.ResourceId" />
            <input type="hidden" asp-for="@Model.OwnerId" value="@Model.OwnerId" />
            <input type="hidden" asp-for="@Model.ImageUrl" value="@Model.ImageUrl" />
            <div id="cashedFields" class="d-none">
                @Html.Raw(Json.Serialize(Model.Fields))
            </div>
        </form>
    </div>
</div>
<div id="tpl" class="d-none">
    @{await Html.RenderPartialAsync("_DropzoneTemplate"); }
</div>

<div class="d-none">
    <div id="fieldProto" name="field">
        <div class="border-custom rounded ">
            <div name="fieldBody" class="d-flex flex-row flex-nowrap justify-content-between p-1">
                <input data-prop="id" type="hidden" />
                <input data-prop="name" type="hidden" />
                <input data-prop="type" type="hidden" />
                <label name="fieldName" class="d-inline-block text-center p-1 w-50">FieldName</label>
            </div>
        </div>
    </div>
</div>

@section Scripts{
    <script>
        let tagify;
        const updateTagify = () => {
            let input = document.querySelector('#TagsJson');
            if (input) {
                tagify = new Tagify(input, {
                    whitelist: [],
                    delimiters: ",| ",
                    maxTags: 5,
                    dropdown: {
                        maxItems: 20,
                        classname: "tags-look",
                        enabled: 0,
                        closeOnSelect: false
                    }
                });
                $.ajax({
                    type: "post",
                    url: "/api/GetTags",
                    success: data => {
                        tagify.settings.whitelist.splice(0, data.length, ...data);
                    }
                });
            }
        };
        $(() => {
            updateTagify();
        });
    </script>
    <script src="~/lib/dropzone-5.7.0/dist/dropzone.js"></script>
    <script src="~/js/appDropzone.js"></script>
    <script src="~/js/createItem.js"></script>
}